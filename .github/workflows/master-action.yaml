name: Publish Docker image master
on:
  push:
    branches:
    - master
jobs:
  push_to_ecr:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    container: dnxsolutions/aws:2.1.6-dnx1
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build, tag, and push image to Amazon public ECR
        env:
          ECR_REGISTRY: public.ecr.aws
          ECR_REPOSITORY: dnxsolutions/argocd-poc
        run: |
          apk add docker
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - name: Save sha to file
        shell: bash
        run: |
          git rev-parse --short HEAD > sha-short.txt
      - name: Upload math result for job 1
        uses: actions/upload-artifact@v2
        with:
          name: sha
          path: sha-short.txt
  staging_deploy:
    name: Update staging deployment
    runs-on: ubuntu-latest
    needs: [push_to_ecr]
    container: dnxsolutions/docker-kube-tools:0.3.2
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: 'deploy'
      - name: Download sha
        uses: actions/download-artifact@v2
        with:
          name: sha
      - name: Store variable SHA
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(cat sha-short.txt)"
      - name: Helm lint
        run: |
          helm lint ./charts/argocd-poc
      - name: Rendering template
        env:
          APP_ID: argocd-poc-staging
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
          HOSTNAME: argocd-poc.staging.labs2.dnx.host
        run: |
          cat template.yaml \
            | kyml tmpl \
              -e APP_ID \
              -e IMAGE_TAG \
              -e HOSTNAME \
            | tee apps/$APP_ID.yaml
          git config --global user.name 'DNX Labs'
          git config --global user.email 'dnxlabs@users.noreply.github.com'
          git add ./apps/$APP_ID.yaml
          git commit -m "Updates staging deploy"
          git push origin deploy